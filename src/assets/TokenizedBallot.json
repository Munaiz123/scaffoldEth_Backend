{
    "address": "0xebB21875df60a363442AB665673e20d293E81188",
    "abi": [
      {
        "inputs": [
          {
            "internalType": "bytes32[]",
            "name": "_proposalNames",
            "type": "bytes32[]"
          },
          {
            "internalType": "address",
            "name": "_tokenContract",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "_targetBlockNumber",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "voter",
            "type": "address"
          }
        ],
        "name": "getVotePower",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "blockNumber",
            "type": "uint256"
          }
        ],
        "name": "isPastBlock",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "name": "proposals",
        "outputs": [
          {
            "internalType": "bytes32",
            "name": "name",
            "type": "bytes32"
          },
          {
            "internalType": "uint256",
            "name": "voteCount",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "targetBlockNumber",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "tokenContract",
        "outputs": [
          {
            "internalType": "contract IMyToken",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "proposal",
            "type": "uint256"
          }
        ],
        "name": "vote",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "proposal",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "vote",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "name": "votePowerSpent",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "winnerName",
        "outputs": [
          {
            "internalType": "bytes32",
            "name": "winnerName_",
            "type": "bytes32"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "winningProposal",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "winningProposal_",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      }
    ],
    "transactionHash": "0x3d7c4e627b2094c2f6ad25e6489a75c6a25daa0bcb9ce10674ce526afc1baddf",
    "receipt": {
      "to": null,
      "from": "0xb6f98cc3d352134b28Ac3783bd4833D1b636BF48",
      "contractAddress": "0xebB21875df60a363442AB665673e20d293E81188",
      "transactionIndex": 6,
      "gasUsed": "495745",
      "logsBloom": "0x
      "blockHash": "0xdee40661171cfbbc76076346f362fbc8f26c30e34172b29ffabeab2fd52cacdb",
      "transactionHash": "0x3d7c4e627b2094c2f6ad25e6489a75c6a25daa0bcb9ce10674ce526afc1baddf",
      "logs": [],
      "blockNumber": 18621168,
      "cumulativeGasUsed": "1019738",
      "status": 1,
      "byzantium": true
    },
    "args": [
      [
        "0x0000000000000000000000000000000000000000000000000056616e696c6c61",
        "0x000000000000000000000000000000000000000000000043686f636f6c617465",
        "0x0000000000000000000000000000000000000000000053747261776265727279"
      ],
      "0xA482e8367DD18b5E28B0aDF288D735E3d6cef5dE",
      18535233
    ],
    "numDeployments": 1,
    "solcInputHash": "914c80c9c98fa0e3e7e4055035672fbb",
    "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_proposalNames\",\"type\":\"bytes32[]\"},{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_targetBlockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"getVotePower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"isPastBlock\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenContract\",\"outputs\":[{\"internalType\":\"contract IMyToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposal\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"votePowerSpent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winnerName\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"winnerName_\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winningProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"winningProposal_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenizedBallot.sol\":\"TokenizedBallot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/TokenizedBallot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.7.0 <0.9.0;\\n\\ninterface IMyToken {\\n    function getPastVotes(address, uint256) external view returns (uint256);\\n}\\n\\ncontract TokenizedBallot {\\n    struct Proposal {\\n        bytes32 name;\\n        uint voteCount;\\n    }\\n\\n    IMyToken public tokenContract;\\n    Proposal[] public proposals;\\n    uint256 public targetBlockNumber;\\n    mapping (address => uint256) public votePowerSpent;\\n\\n    constructor( bytes32[] memory _proposalNames, address _tokenContract, uint256 _targetBlockNumber) {\\n\\n        tokenContract = IMyToken(_tokenContract);\\n        targetBlockNumber = _targetBlockNumber;\\n        require( isPastBlock(targetBlockNumber),\\\"block number should be in the past\\\");\\n        for (uint i = 0; i < _proposalNames.length; i++) {\\n            proposals.push(Proposal({name: _proposalNames[i], voteCount: 0}));\\n        }\\n    }\\n\\n    function vote(uint proposal) external {\\n        uint256 votePower = getVotePower(msg.sender);\\n        vote(proposal, votePower);\\n    }\\n\\n    function vote(uint256 proposal, uint256 amount) public {\\n        uint256 votePower = getVotePower(msg.sender);\\n        require(votePower >= amount, \\\"Error: Trying to voite with more votes than available\\\");\\n        votePowerSpent[msg.sender] += amount;\\n        proposals[proposal].voteCount += amount;\\n    }\\n\\n    function getVotePower(address voter) public view returns(uint256) {\\n        return tokenContract.getPastVotes(voter, targetBlockNumber) - votePowerSpent[voter];\\n    }\\n\\n    function winningProposal() public view returns (uint winningProposal_) {\\n        uint winningVoteCount = 0;\\n        for (uint p = 0; p < proposals.length; p++) {\\n            if (proposals[p].voteCount > winningVoteCount) {\\n                winningVoteCount = proposals[p].voteCount;\\n                winningProposal_ = p;\\n            }\\n        }\\n    }\\n\\n    function winnerName() external view returns (bytes32 winnerName_) {\\n        winnerName_ = proposals[winningProposal()].name;\\n    }\\n\\n    function isPastBlock(uint blockNumber) public view returns (bool) {\\n        return blockNumber < block.number;\\n    }\\n}\",\"keccak256\":\"0x66b79a07c1929e69f67942b4445ddfaa393900862ca35113de9887ab74571d27\",\"license\":\"MIT\"}},\"version\":1}",
    "bytecode": "0x608060405234801561001057600080fd5b506040516107c63803806107c683398101604081905261002f91610164565b600080546001600160a01b0319166001600160a01b038416179055600281905561005881431190565b6100b35760405162461bcd60e51b815260206004820152602260248201527f626c6f636b206e756d6265722073686f756c6420626520696e207468652070616044820152611cdd60f21b606482015260840160405180910390fd5b60005b835181101561012957600160405180604001604052808684815181106100de576100de61023c565b6020908102919091018101518252600091810182905283546001818101865594835291819020835160029093020191825591909101519101558061012181610252565b9150506100b6565b50505050610279565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b038116811461015f57600080fd5b919050565b60008060006060848603121561017957600080fd5b83516001600160401b038082111561019057600080fd5b818601915086601f8301126101a457600080fd5b81516020828211156101b8576101b8610132565b8160051b604051601f19603f830116810181811086821117156101dd576101dd610132565b60405292835281830193508481018201928a8411156101fb57600080fd5b948201945b8386101561021957855185529482019493820193610200565b97506102289050888201610148565b955050505050604084015190509250925092565b634e487b7160e01b600052603260045260246000fd5b60006001820161027257634e487b7160e01b600052601160045260246000fd5b5060010190565b61053e806102886000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80639e90d0d9116100665780639e90d0d91461012f578063b384abef1461014f578063b6c6301814610162578063bb9c092014610185578063e2ba53f01461019857600080fd5b80630121b93f146100a3578063013cf08b146100b85780632a8cd29e146100e557806355a373d6146100fc578063609ff1bd14610127575b600080fd5b6100b66100b1366004610419565b6101a0565b005b6100cb6100c6366004610419565b6101bb565b604080519283526020830191909152015b60405180910390f35b6100ee60025481565b6040519081526020016100dc565b60005461010f906001600160a01b031681565b6040516001600160a01b0390911681526020016100dc565b6100ee6101e9565b6100ee61013d366004610432565b60036020526000908152604090205481565b6100b661015d366004610462565b610266565b610175610170366004610419565b431190565b60405190151581526020016100dc565b6100ee610193366004610432565b610349565b6100ee6103e6565b60006101ab33610349565b90506101b78282610266565b5050565b600181815481106101cb57600080fd5b60009182526020909120600290910201805460019091015490915082565b600080805b60015481101561026157816001828154811061020c5761020c610484565b906000526020600020906002020160010154111561024f576001818154811061023757610237610484565b90600052602060002090600202016001015491508092505b80610259816104b0565b9150506101ee565b505090565b600061027133610349565b9050818110156102e55760405162461bcd60e51b815260206004820152603560248201527f4572726f723a20547279696e6720746f20766f6974652077697468206d6f726560448201527420766f746573207468616e20617661696c61626c6560581b606482015260840160405180910390fd5b33600090815260036020526040812080548492906103049084906104c9565b92505081905550816001848154811061031f5761031f610484565b9060005260206000209060020201600101600082825461033f91906104c9565b9091555050505050565b6001600160a01b038181166000818152600360205260408082205482546002549251630748d63560e31b81526004810195909552602485019290925291939192911690633a46b1a890604401602060405180830381865afa1580156103b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d691906104dc565b6103e091906104f5565b92915050565b600060016103f26101e9565b8154811061040257610402610484565b906000526020600020906002020160000154905090565b60006020828403121561042b57600080fd5b5035919050565b60006020828403121561044457600080fd5b81356001600160a01b038116811461045b57600080fd5b9392505050565b6000806040838503121561047557600080fd5b50508035926020909101359150565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016104c2576104c261049a565b5060010190565b808201808211156103e0576103e061049a565b6000602082840312156104ee57600080fd5b5051919050565b818103818111156103e0576103e061049a56fea26469706673582212208ea442c8be67ce8380ffbf1d7d29c8faffe2278a8e04cb1707a9b45c2f10e5f764736f6c63430008140033",
    "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c80639e90d0d9116100665780639e90d0d91461012f578063b384abef1461014f578063b6c6301814610162578063bb9c092014610185578063e2ba53f01461019857600080fd5b80630121b93f146100a3578063013cf08b146100b85780632a8cd29e146100e557806355a373d6146100fc578063609ff1bd14610127575b600080fd5b6100b66100b1366004610419565b6101a0565b005b6100cb6100c6366004610419565b6101bb565b604080519283526020830191909152015b60405180910390f35b6100ee60025481565b6040519081526020016100dc565b60005461010f906001600160a01b031681565b6040516001600160a01b0390911681526020016100dc565b6100ee6101e9565b6100ee61013d366004610432565b60036020526000908152604090205481565b6100b661015d366004610462565b610266565b610175610170366004610419565b431190565b60405190151581526020016100dc565b6100ee610193366004610432565b610349565b6100ee6103e6565b60006101ab33610349565b90506101b78282610266565b5050565b600181815481106101cb57600080fd5b60009182526020909120600290910201805460019091015490915082565b600080805b60015481101561026157816001828154811061020c5761020c610484565b906000526020600020906002020160010154111561024f576001818154811061023757610237610484565b90600052602060002090600202016001015491508092505b80610259816104b0565b9150506101ee565b505090565b600061027133610349565b9050818110156102e55760405162461bcd60e51b815260206004820152603560248201527f4572726f723a20547279696e6720746f20766f6974652077697468206d6f726560448201527420766f746573207468616e20617661696c61626c6560581b606482015260840160405180910390fd5b33600090815260036020526040812080548492906103049084906104c9565b92505081905550816001848154811061031f5761031f610484565b9060005260206000209060020201600101600082825461033f91906104c9565b9091555050505050565b6001600160a01b038181166000818152600360205260408082205482546002549251630748d63560e31b81526004810195909552602485019290925291939192911690633a46b1a890604401602060405180830381865afa1580156103b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d691906104dc565b6103e091906104f5565b92915050565b600060016103f26101e9565b8154811061040257610402610484565b906000526020600020906002020160000154905090565b60006020828403121561042b57600080fd5b5035919050565b60006020828403121561044457600080fd5b81356001600160a01b038116811461045b57600080fd5b9392505050565b6000806040838503121561047557600080fd5b50508035926020909101359150565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016104c2576104c261049a565b5060010190565b808201808211156103e0576103e061049a565b6000602082840312156104ee57600080fd5b5051919050565b818103818111156103e0576103e061049a56fea26469706673582212208ea442c8be67ce8380ffbf1d7d29c8faffe2278a8e04cb1707a9b45c2f10e5f764736f6c63430008140033",
    "devdoc": {
      "kind": "dev",
      "methods": {},
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {},
      "version": 1
    },
    "storageLayout": {
      "storage": [
        {
          "astId": 19,
          "contract": "contracts/TokenizedBallot.sol:TokenizedBallot",
          "label": "tokenContract",
          "offset": 0,
          "slot": "0",
          "type": "t_contract(IMyToken)11"
        },
        {
          "astId": 23,
          "contract": "contracts/TokenizedBallot.sol:TokenizedBallot",
          "label": "proposals",
          "offset": 0,
          "slot": "1",
          "type": "t_array(t_struct(Proposal)16_storage)dyn_storage"
        },
        {
          "astId": 25,
          "contract": "contracts/TokenizedBallot.sol:TokenizedBallot",
          "label": "targetBlockNumber",
          "offset": 0,
          "slot": "2",
          "type": "t_uint256"
        },
        {
          "astId": 29,
          "contract": "contracts/TokenizedBallot.sol:TokenizedBallot",
          "label": "votePowerSpent",
          "offset": 0,
          "slot": "3",
          "type": "t_mapping(t_address,t_uint256)"
        }
      ],
      "types": {
        "t_address": {
          "encoding": "inplace",
          "label": "address",
          "numberOfBytes": "20"
        },
        "t_array(t_struct(Proposal)16_storage)dyn_storage": {
          "base": "t_struct(Proposal)16_storage",
          "encoding": "dynamic_array",
          "label": "struct TokenizedBallot.Proposal[]",
          "numberOfBytes": "32"
        },
        "t_bytes32": {
          "encoding": "inplace",
          "label": "bytes32",
          "numberOfBytes": "32"
        },
        "t_contract(IMyToken)11": {
          "encoding": "inplace",
          "label": "contract IMyToken",
          "numberOfBytes": "20"
        },
        "t_mapping(t_address,t_uint256)": {
          "encoding": "mapping",
          "key": "t_address",
          "label": "mapping(address => uint256)",
          "numberOfBytes": "32",
          "value": "t_uint256"
        },
        "t_struct(Proposal)16_storage": {
          "encoding": "inplace",
          "label": "struct TokenizedBallot.Proposal",
          "members": [
            {
              "astId": 13,
              "contract": "contracts/TokenizedBallot.sol:TokenizedBallot",
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_bytes32"
            },
            {
              "astId": 15,
              "contract": "contracts/TokenizedBallot.sol:TokenizedBallot",
              "label": "voteCount",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256"
            }
          ],
          "numberOfBytes": "64"
        },
        "t_uint256": {
          "encoding": "inplace",
          "label": "uint256",
          "numberOfBytes": "32"
        }
      }
    }
  }